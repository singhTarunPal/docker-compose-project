version: '3.8'
services:
   rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5673:5673
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - rabbitmq_go_net
   
   mysqldb:
    image: mysql:5.7
    restart: unless-stopped
    container_name: 'mysqldb'
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - db:/var/lib/mysql         
   library_spring_app:
    depends_on:
      - mysqldb
      - rabbitmq
      - inventory_django_app
    build: ../libraryService
    container_name: library_spring_app
    restart: on-failure
    env_file: ./.env
    ports:
      - $LIBRARY_SPRING_LOCAL_PORT:$LIBRARY_SPRING_DOCKER_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?useSSL=false",
        "spring.datasource.username" : "$MYSQLDB_USER",
        "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5Dialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
      }'
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true    
   book_flask_app:
    build: ../bookService
    container_name: book_flask_app
    env_file: ./.env  
    ports:
      - $BOOK_FLASK_LOCAL_PORT:$BOOK_FLASK_DOCKER_PORT 
    restart: on-failure    
   inventory_django_app:
    build: ../inventoryService
    container_name: inventory_django_app
    env_file: ./.env
    ports:
      - $INVENTORY_DJANGO_LOCAL_PORT:$INVENTORY_DJANGO_DOCKER_PORT 
    restart: on-failure    
   notification_spring_app:
    depends_on:
      - rabbitmq
    build: ../notificationService
    container_name: notification_spring_app
    restart: on-failure
    env_file: ./.env
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
    ports:
      - $NOTIFICATION_SPRING_LOCAL_PORT:$NOTIFICATION_SPRING_DOCKER_PORT
    volumes:
      - .m2:/root/.m2
    network_mode: "host"
    stdin_open: true
    tty: true   
volumes:
  db:
networks:
   rabbitmq_go_net:
    driver: bridge